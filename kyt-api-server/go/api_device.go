/*
 * KYT API Server
 *
 * This is the KYT API Server
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"
	"strings"
)

// A DeviceApiController binds http requests to an api service and writes the service results to the http response
type DeviceApiController struct {
	service DeviceApiServicer
}

// NewDeviceApiController creates a default api controller
func NewDeviceApiController(s DeviceApiServicer) Router {
	return &DeviceApiController{service: s}
}

// Routes returns all of the api route for the DeviceApiController
func (c *DeviceApiController) Routes() Routes {
	return Routes{
		{
			"GetDevices",
			strings.ToUpper("Get"),
			"/v1/devices",
			c.GetDevices,
		},
	}
}

// GetDevices - List devices for a tenant
func (c *DeviceApiController) GetDevices(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.GetDevices(r.Context())
	//If an error occured, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	//If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}
