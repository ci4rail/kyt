resources:
  - name: gh-release
    type: github-release
    source:
      owner: ci4rail
      repository: kyt-cli
      access_token: ((github_access_token))
      pre_release: true

  # Upstream docker images
  - name: image-bb-gitversion-tool
    type: docker-image
    source:
      repository: elbb/bb-gitversion
      tag: 0.7.0

  - name: image-aws-cli
    type: docker-image
    source:
      repository: amazon/aws-cli
      tag: 2.0.22

  - name: image-golang
    type: docker-image
    source:
      repository: golang
      tag: 1.15.6-buster

  - name: image-openapi-generator
    type: docker-image
    source:
      repository: openapitools/openapi-generator-cli
      tag: v5.0.0

  # Own docker images
  - name: image-kyt-api-server
    type: docker-image
    source:
      repository: harbor.ci4rail.com/ci4rail/kyt/kyt-api-server
      username: ((registry_user))
      password: ((registry_password))

  # S3 buckets
  - name: s3-gitversion
    type: s3
    source:
      bucket: ((name))
      endpoint: ((s3_endpoint))
      regexp: ((name))/gitversion/gitversion-(.*).tar.gz
      access_key_id: ((s3_access_key))
      secret_access_key: ((s3_secret_key))
      disable_ssl: ((s3_skip_ssl_verification))

  # Git sources
  - name: source
    type: git
    source:
      uri: ((git_source))
      private_key: ((privatekey))
      branch: ((git_branch))
      skip_ssl_verification: ((git_skip_ssl_verification))

jobs:
  - name: generate-gitversion-and-put-it-on-s3
    public: true
    plan:
      - in_parallel:
          - get: image-bb-gitversion-tool
          - get: source
            trigger: true
          - get: image-aws-cli
      - task: generate-version
        image: image-bb-gitversion-tool
        config:
          platform: linux
          inputs:
            - name: source
          outputs:
            - name: gitversion
          run:
            path: /bin/bash
            args:
              - -exc
              - |
                entrypoint.sh &&
                jq empty gitversion/json/gitversion.json &&
                cat gitversion/json/gitversion.json &&
                tar cvfz gitversion/gitversion-$(cat gitversion/plain/BranchVersion).tar.gz gitversion/*
          params:
            GIT_PATH: source
            GEN_PATH: gitversion
      - task: check-or-create-bucket-for-((name))-on-s3
        image: image-aws-cli
        config:
          platform: linux
          run:
            path: /bin/bash
            args:
              - -xc
              - |
                mkdir -p ~/.aws
                # hide setting credentials in plain text in concourse ui
                set +x
                export TERM="xterm-256color"
                echo "[default]" > ~/.aws/credentials
                echo "aws_access_key_id=((s3_access_key))" >> ~/.aws/credentials
                echo "aws_secret_access_key=((s3_secret_key))" >> ~/.aws/credentials
                set -x
                # check if bucket exists on s3 endpoint. If not create one
                aws --endpoint-url ((s3_endpoint)) s3api head-bucket --bucket ((name)) 2> /dev/null
                if [ $? != 0 ]; then aws s3 mb s3://((name)) --endpoint-url ((s3_endpoint)); fi
      - put: s3-gitversion
        params:
          file: gitversion/gitversion-*.tar.gz
          acl: public-read

  - name: build-((name))
    public: true
    plan:
      - in_parallel:
          - get: source
          - get: s3-gitversion
            passed: [generate-gitversion-and-put-it-on-s3]
            trigger: true
            params:
              unpack: true
          - get: image-openapi-generator
          - get: image-golang

      - task: build-generate-kyt-cli-openapi
        image: image-openapi-generator
        config:
          platform: linux
          inputs:
            - name: source
          outputs:
            - name: openapi
          run:
            path: /bin/bash
            args:
              - -ec
              - |
                ROOT=$(pwd)
                java -Xmx1024M -DloggerPath=conf/log4j.properties -jar \
                /opt/openapi-generator/modules/openapi-generator-cli/target/openapi-generator-cli.jar \
                generate -i source/kyt-api-spec/kytapi.yaml -g go -o openapi
                rm -f openapi/go.mod openapi/go.sum

      - task: build-kyt-cli
        image: image-golang
        config:
          platform: linux
          inputs:
            - name: source
            - name: openapi
          outputs:
            - name: install
          run:
            path: /bin/bash
            args:
              - -ec
              - |
                ROOT=$(pwd)
                cp -r openapi/ ${ROOT}/source/kyt-cli
                cd ${ROOT}/source/kyt-cli
                make
                # copy the artifacts as a
                cp ../bin/kyt ../bin/kyt.exe ${ROOT}/install

      - put: gh-release
        params:
          name: s3-gitversion/gitversion/plain/BranchVersion
          tag: s3-gitversion/gitversion/plain/BranchVersion
          globs:
            - install/*

      - put: image-kyt-api-server
        params:
          build: source/
          dockerfile: source/kyt-api-server/Dockerfile
          latest: false
          tag_file: s3-gitversion/gitversion/plain/BranchVersion
